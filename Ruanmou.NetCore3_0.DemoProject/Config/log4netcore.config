<?xml version="1.0" encoding="utf-8"?>
<log4net>
  <!--写入到文件-->
  <!--name="LogFileAppender" 放在下面root-->
  <!--定义输出到windows事件中：type="log4net.Appender.EventLogAppender"-->
  <!--定义输出到控制台命令行中：type="log4net.Appender.ConsoleAppender"-->
  <!--定义输出到数据库中：type="log4net.Appender.ADONetAppender"-->
  <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender,log4net">
    <!--文件路径，如果RollingStyle为Composite或Date，则这里设置为目录，文件名在DatePattern里设置，其他则这里要有文件名。已经扩展支持虚拟目录-->
    <!--将日记写入到跟目录下面的File文件夹下面的DatePattern文件中-->
    <param name="File" value="D:\\Log\\NetCore\\" />

    <!--追加日志内容-->
    <param name="AppendToFile" value="true" />

    <!--日志最大个数,都是最新的-->
    <!--rollingStyle节点为Size时,只能有value个日志-->
    <!--rollingStyle节点为Composite时,每天有value个日志-->
    <param name="MaxSizeRollBackups" value="100" />

    <!--文件最大值：可用的单位:KB|MB|GB-->
    <param name="MaximumFileSize" value="10240KB" />

    <!--StaticLogFileName的值如果为true，则当前日志文件(相对于历史日志文件而言)的文件名只取File参数。如果为false，则文件名取File+DatePattern。-->
    <param name="StaticLogFileName" value="false" />

    <!--可以为:Once|Size|Date|Composite-->
    <!--Composite为Size和Date的组合-->
    <!--按照日期格式进行划分文件-->
    <param name="RollingStyle" value="Date" />

    <!--文件路径，如果RollingStyle为Composite或Date，则这里设置为目录-->
    <param name="DatePattern" value="''yyyy-MM-dd'\\log.'HH'.log'" />

    <param name="CountDirection" value="-1" />
    <!--日志等级-->
    <filter type="log4net.Filter.LevelRangeFilter">
      <!--从高到低的顺序：levels: OFF > FATAL > ERROR > WARN > INFO > DEBUG  > ALL -->
      <!--写[LevelMin到LevelMax]等级之间的日志，包含LevelMin和LevelMax等级-->
      <param name="LevelMin" value="DEBUG" />
      <param name="LevelMax" value="WARN" />
    </filter>

    <!--log4net记录错误的格式(即：用什么样的格式（布局）来记录错误)-->
    <layout type="log4net.Layout.PatternLayout">
      <!--%message:输出的日志消息；%newline:换行;%date:输出当前语句运行的时间；%r:输出程序从运行到当前语句消耗的毫秒数-->
      <!--%thread:输出当前语句所在的线程id；%priority:优先级ALL,info,warn,error,fatal,off； %class:程序所在类；%file:输出语句所在的文件名；%line:输出语句所在的行号；%number或者%level：日志级别-->
      <!--<param name="ConversionPattern" value=" 【时间】:%d%n 【级别】:%p%n 【类名】:%c%n 【线程ID】: %thread %n 【文件地址】:%F 第%L行%n 【日志内容】:%m%n 【日记详细】：%exception %n%n" />-->
      <param name="ConversionPattern" value="{&quot;level&quot;:&quot;%level&quot;,&quot;date&quot;:&quot;%date&quot;,&quot;Logger&quot;: &quot;%c&quot;,&quot;content&quot;: %message}%newline" />
    </layout>
  </appender>

  <!--name="ErrorFileAppender" 放在下面root-->
  <appender name="ErrorFileAppender" type="log4net.Appender.RollingFileAppender,log4net">
    <!--文件路径，如果RollingStyle为Composite或Date，则这里设置为目录，文件名在DatePattern里设置，其他则这里要有文件名。已经扩展支持虚拟目录-->
    <!--将日记写入到跟目录下面的File文件夹下面的DatePattern文件中-->
    <param name="File" value="D:\\Log\\NetCore\\" />

    <!--追加日志内容-->
    <param name="AppendToFile" value="true" />

    <!--日志最大个数,都是最新的-->
    <!--rollingStyle节点为Size时,只能有value个日志-->
    <!--rollingStyle节点为Composite时,每天有value个日志-->
    <param name="MaxSizeRollBackups" value="100" />

    <!--文件最大值：可用的单位:KB|MB|GB-->
    <param name="MaximumFileSize" value="10240KB" />

    <!--StaticLogFileName的值如果为true，则当前日志文件(相对于历史日志文件而言)的文件名只取File参数。如果为false，则文件名取File+DatePattern。-->
    <param name="StaticLogFileName" value="false" />

    <!--可以为:Once|Size|Date|Composite-->
    <!--Composite为Size和Date的组合-->
    <param name="RollingStyle" value="Date" />

    <!--文件路径，如果RollingStyle为Composite或Date，则这里设置为目录-->
    <param name="DatePattern" value="''yyyy-MM-dd'\\err.'HH'.log'" />
    <!--LOG后缀必须是大写的，否则有问题-->

    <param name="CountDirection" value="-1" />
    <!--日志等级-->
    <filter type="log4net.Filter.LevelRangeFilter">
      <!--从高到低的顺序： levels: OFF(关闭) > FATAL > ERROR > WARN > INFO > DEBUG  > ALL -->
      <!--写[LevelMin到LevelMax]等级之间的日志，包含LevelMin和LevelMax等级-->
      <param name="LevelMin" value="ERROR" />
      <param name="LevelMax" value="FATAL" />
    </filter>

    <!--log4net记录错误的格式(即：用什么样的格式（布局）来记录错误)-->
    <layout type="log4net.Layout.PatternLayout">
      <!--<param name="ConversionPattern" value=" 【时间】:%d%n 【级别】:%p%n 【类名】:%c%n 【线程ID】: %thread %n 【文件地址】:%F 第%L行%n 【日志内容】:%m%n 【日记详细】：%exception %n%n" />-->
      <param name="ConversionPattern" value="{&quot;level&quot;:&quot;%level&quot;,&quot;date&quot;:&quot;%date&quot;,&quot;Logger&quot;: &quot;%c&quot;,&quot;content&quot;: %message}%newline" />
    </layout>
  </appender>

  <!--将日记写入数据库-->
  <appender name="ADONetAppender_SqlServer" type="log4net.Appender.ADONetAppender">
    <bufferSize value="0" />
    <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <!--<connectionString value="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:log4net.mdb" />-->
    <!--access数据库中-->
    <!--<connectionString value="SERVER=FB-VAIO;DATABASE=sales;UID=sa;PWD=123456;Connect Timeout=15;" />-->
    <!--<connectionString value="Data Source=FB-VAIO;Initial Catalog=sales;Integrated Security=SSPI;Connect Timeout=15;" />-->
    <connectionString value="Data Source=10.112.7.52;Initial Catalog=bank; User ID=sa;Password=qwe123;Persist Security Info=True;" />
    <!--sqlserver数据库-->
    <commandText value="INSERT INTO Log ([Date],[Thread],[Level],[logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />

    <parameter>
      <parameterName value="@log_date"/>
      <dbType value="DateTime"/>
      <layout type="log4net.Layout.RawTimeStampLayout"/>
    </parameter>

    <parameter>
      <parameterName value="@thread"/>
      <dbType value="String"/>
      <size value="255"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%t"/>
      </layout>
    </parameter>

    <parameter>
      <parameterName value="@log_level"/>
      <dbType value="String"/>
      <size value="50"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%p"/>
      </layout>
    </parameter>

    <parameter>
      <parameterName value="@logger"/>
      <dbType value="String"/>
      <size value="50"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%logger"/>
      </layout>
    </parameter>

    <parameter>
      <parameterName value="@message"/>
      <dbType value="String"/>
      <size value="4000"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%m"/>
      </layout>
    </parameter>

    <parameter>
      <parameterName value="@exception"/>
      <dbType value="String"/>
      <size value="2000"/>
      <layout type="log4net.Layout.ExceptionLayout">
        <conversionPattern value="%exception"/>
      </layout>
    </parameter>
  </appender>

  <!--在出现什么级别的错误才记录错误 【注意：如果有多个appender-ref的时候，应该给他们放到同一个root节点下】-->
  <root>
    <level value="ALL" />
    <appender-ref ref="LogFileAppender"/>
    <!--<appender-ref ref="ADONetAppender_SqlServer"/>-->
    <appender-ref ref="ErrorFileAppender" />
  </root>
</log4net>


